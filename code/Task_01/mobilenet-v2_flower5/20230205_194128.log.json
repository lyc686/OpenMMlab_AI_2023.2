{"env_info": "sys.platform: linux\nPython: 3.7.10 (default, Jun  4 2021, 14:48:32) [GCC 7.5.0]\nCUDA available: True\nGPU 0: NVIDIA GeForce RTX 3060\nCUDA_HOME: /usr/local/cuda\nNVCC: Cuda compilation tools, release 11.2, V11.2.152\nGCC: gcc (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0\nPyTorch: 1.10.0+cu113\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.3\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86\n  - CuDNN 8.2\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.11.1+cu113\nOpenCV: 4.5.4\nMMCV: 1.7.1\nMMCV Compiler: GCC 9.3\nMMCV CUDA Compiler: 11.3\nMMClassification: 0.25.0+", "seed": 822248908, "mmcls_version": "0.25.0", "config": "model = dict(\n    type='ImageClassifier',\n    backbone=dict(type='MobileNetV2', widen_factor=1.0),\n    neck=dict(type='GlobalAveragePooling'),\n    head=dict(\n        type='LinearClsHead',\n        num_classes=5,\n        in_channels=1280,\n        loss=dict(type='CrossEntropyLoss', loss_weight=1.0),\n        topk=(1, 5)))\nload_from = 'mobilenet_v2_batch256_imagenet_20200708-3b2dc3af.pth'\ndata = dict(\n    samples_per_gpu=32,\n    workers_per_gpu=2,\n    train=dict(\n        type='CustomDataset',\n        data_prefix='data/flower_dataset/train',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='RandomResizedCrop', size=224, backend='pillow'),\n            dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='ToTensor', keys=['gt_label']),\n            dict(type='Collect', keys=['img', 'gt_label'])\n        ]),\n    val=dict(\n        type='CustomDataset',\n        data_prefix='data/flower_dataset/val',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='Resize', size=(256, -1), backend='pillow'),\n            dict(type='CenterCrop', crop_size=224),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ]),\n    test=dict(\n        type='CustomDataset',\n        data_prefix='data/flower_dataset/val',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='Resize', size=(256, -1), backend='pillow'),\n            dict(type='CenterCrop', crop_size=224),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ]))\nevaluation = dict(interval=1, metric='accuracy')\noptimizer = dict(type='SGD', lr=0.005, momentum=0.9, weight_decay=4e-05)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(policy='step', gamma=0.98, step=1)\nrunner = dict(type='EpochBasedRunner', max_epochs=10)\ncheckpoint_config = dict(interval=5)\nlog_config = dict(interval=10, hooks=[dict(type='TextLoggerHook')])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nresume_from = None\nworkflow = [('train', 1)]\nwork_dir = './work_dirs/mobilenet-v2_flower5'\ngpu_ids = range(0, 1)\ndevice = 'cuda'\nseed = 822248908\n", "CLASSES": ["daisy", "dandelion", "rose", "sunflower", "tulip"]}
{"mode": "train", "epoch": 1, "iter": 10, "lr": 0.005, "memory": 2456, "data_time": 0.23893, "loss": 1.21172, "time": 0.33393}
{"mode": "train", "epoch": 1, "iter": 20, "lr": 0.005, "memory": 2456, "data_time": 0.00265, "loss": 0.47149, "time": 0.08616}
{"mode": "train", "epoch": 1, "iter": 30, "lr": 0.005, "memory": 2456, "data_time": 0.00269, "loss": 0.41398, "time": 0.08563}
{"mode": "train", "epoch": 1, "iter": 40, "lr": 0.005, "memory": 2456, "data_time": 0.00293, "loss": 0.38627, "time": 0.08647}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.005, "memory": 2456, "data_time": 0.00197, "loss": 0.36616, "time": 0.08495}
{"mode": "train", "epoch": 1, "iter": 60, "lr": 0.005, "memory": 2456, "data_time": 0.00223, "loss": 0.58973, "time": 0.08692}
{"mode": "train", "epoch": 1, "iter": 70, "lr": 0.005, "memory": 2456, "data_time": 0.00244, "loss": 0.5294, "time": 0.08617}
{"mode": "val", "epoch": 1, "iter": 18, "lr": 0.005, "accuracy_top-1": 89.96479, "accuracy_top-5": 100.0}
{"mode": "train", "epoch": 2, "iter": 10, "lr": 0.0049, "memory": 2456, "data_time": 0.22511, "loss": 0.39756, "time": 0.31108}
{"mode": "train", "epoch": 2, "iter": 20, "lr": 0.0049, "memory": 2456, "data_time": 0.00219, "loss": 0.55823, "time": 0.08602}
{"mode": "train", "epoch": 2, "iter": 30, "lr": 0.0049, "memory": 2456, "data_time": 0.00257, "loss": 0.38058, "time": 0.08613}
{"mode": "train", "epoch": 2, "iter": 40, "lr": 0.0049, "memory": 2456, "data_time": 0.00221, "loss": 0.54439, "time": 0.08549}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 0.0049, "memory": 2456, "data_time": 0.00249, "loss": 0.58415, "time": 0.08652}
{"mode": "train", "epoch": 2, "iter": 60, "lr": 0.0049, "memory": 2456, "data_time": 0.00186, "loss": 0.43576, "time": 0.08587}
{"mode": "train", "epoch": 2, "iter": 70, "lr": 0.0049, "memory": 2456, "data_time": 0.00212, "loss": 0.34602, "time": 0.08635}
{"mode": "val", "epoch": 2, "iter": 18, "lr": 0.0049, "accuracy_top-1": 89.43662, "accuracy_top-5": 100.0}
{"mode": "train", "epoch": 3, "iter": 10, "lr": 0.0048, "memory": 2456, "data_time": 0.23549, "loss": 0.34789, "time": 0.31331}
{"mode": "train", "epoch": 3, "iter": 20, "lr": 0.0048, "memory": 2456, "data_time": 0.00273, "loss": 0.23469, "time": 0.08733}
{"mode": "train", "epoch": 3, "iter": 30, "lr": 0.0048, "memory": 2456, "data_time": 0.01249, "loss": 0.30043, "time": 0.09023}
{"mode": "train", "epoch": 3, "iter": 40, "lr": 0.0048, "memory": 2456, "data_time": 0.00306, "loss": 0.31264, "time": 0.08564}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 0.0048, "memory": 2456, "data_time": 0.00299, "loss": 0.25306, "time": 0.08369}
{"mode": "train", "epoch": 3, "iter": 60, "lr": 0.0048, "memory": 2456, "data_time": 0.00293, "loss": 0.33559, "time": 0.08458}
{"mode": "train", "epoch": 3, "iter": 70, "lr": 0.0048, "memory": 2456, "data_time": 0.00258, "loss": 0.31499, "time": 0.08684}
{"mode": "val", "epoch": 3, "iter": 18, "lr": 0.0048, "accuracy_top-1": 92.60564, "accuracy_top-5": 100.0}
{"mode": "train", "epoch": 4, "iter": 10, "lr": 0.00471, "memory": 2456, "data_time": 0.23161, "loss": 0.31214, "time": 0.30971}
{"mode": "train", "epoch": 4, "iter": 20, "lr": 0.00471, "memory": 2456, "data_time": 0.0028, "loss": 0.31057, "time": 0.09026}
{"mode": "train", "epoch": 4, "iter": 30, "lr": 0.00471, "memory": 2456, "data_time": 0.002, "loss": 0.26125, "time": 0.08677}
{"mode": "train", "epoch": 4, "iter": 40, "lr": 0.00471, "memory": 2456, "data_time": 0.00669, "loss": 0.27963, "time": 0.09}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 0.00471, "memory": 2456, "data_time": 0.00264, "loss": 0.33579, "time": 0.08839}
{"mode": "train", "epoch": 4, "iter": 60, "lr": 0.00471, "memory": 2456, "data_time": 0.00287, "loss": 0.35147, "time": 0.08747}
{"mode": "train", "epoch": 4, "iter": 70, "lr": 0.00471, "memory": 2456, "data_time": 0.00247, "loss": 0.28309, "time": 0.08668}
{"mode": "val", "epoch": 4, "iter": 18, "lr": 0.00471, "accuracy_top-1": 94.19014, "accuracy_top-5": 100.0}
{"mode": "train", "epoch": 5, "iter": 10, "lr": 0.00461, "memory": 2456, "data_time": 0.22047, "loss": 0.22975, "time": 0.30678}
{"mode": "train", "epoch": 5, "iter": 20, "lr": 0.00461, "memory": 2456, "data_time": 0.00256, "loss": 0.24983, "time": 0.08752}
{"mode": "train", "epoch": 5, "iter": 30, "lr": 0.00461, "memory": 2456, "data_time": 0.00234, "loss": 0.29535, "time": 0.08672}
{"mode": "train", "epoch": 5, "iter": 40, "lr": 0.00461, "memory": 2456, "data_time": 0.00229, "loss": 0.21048, "time": 0.08548}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 0.00461, "memory": 2456, "data_time": 0.00287, "loss": 0.25009, "time": 0.08454}
{"mode": "train", "epoch": 5, "iter": 60, "lr": 0.00461, "memory": 2456, "data_time": 0.00283, "loss": 0.22595, "time": 0.08641}
{"mode": "train", "epoch": 5, "iter": 70, "lr": 0.00461, "memory": 2456, "data_time": 0.00291, "loss": 0.23801, "time": 0.08681}
{"mode": "val", "epoch": 5, "iter": 18, "lr": 0.00461, "accuracy_top-1": 94.01408, "accuracy_top-5": 100.0}
{"mode": "train", "epoch": 6, "iter": 10, "lr": 0.00452, "memory": 2456, "data_time": 0.23067, "loss": 0.23072, "time": 0.3109}
{"mode": "train", "epoch": 6, "iter": 20, "lr": 0.00452, "memory": 2456, "data_time": 0.00272, "loss": 0.27216, "time": 0.08833}
{"mode": "train", "epoch": 6, "iter": 30, "lr": 0.00452, "memory": 2456, "data_time": 0.00343, "loss": 0.20563, "time": 0.08512}
{"mode": "train", "epoch": 6, "iter": 40, "lr": 0.00452, "memory": 2456, "data_time": 0.00288, "loss": 0.23011, "time": 0.08796}
{"mode": "train", "epoch": 6, "iter": 50, "lr": 0.00452, "memory": 2456, "data_time": 0.00295, "loss": 0.19233, "time": 0.08607}
{"mode": "train", "epoch": 6, "iter": 60, "lr": 0.00452, "memory": 2456, "data_time": 0.00285, "loss": 0.19183, "time": 0.0862}
{"mode": "train", "epoch": 6, "iter": 70, "lr": 0.00452, "memory": 2456, "data_time": 0.01024, "loss": 0.18214, "time": 0.08903}
{"mode": "val", "epoch": 6, "iter": 18, "lr": 0.00452, "accuracy_top-1": 94.19014, "accuracy_top-5": 100.0}
{"mode": "train", "epoch": 7, "iter": 10, "lr": 0.00443, "memory": 2456, "data_time": 0.23484, "loss": 0.1565, "time": 0.31326}
{"mode": "train", "epoch": 7, "iter": 20, "lr": 0.00443, "memory": 2456, "data_time": 0.00239, "loss": 0.14442, "time": 0.08447}
{"mode": "train", "epoch": 7, "iter": 30, "lr": 0.00443, "memory": 2456, "data_time": 0.00312, "loss": 0.20522, "time": 0.08732}
{"mode": "train", "epoch": 7, "iter": 40, "lr": 0.00443, "memory": 2456, "data_time": 0.00299, "loss": 0.25321, "time": 0.08498}
{"mode": "train", "epoch": 7, "iter": 50, "lr": 0.00443, "memory": 2456, "data_time": 0.0028, "loss": 0.22173, "time": 0.08837}
{"mode": "train", "epoch": 7, "iter": 60, "lr": 0.00443, "memory": 2456, "data_time": 0.00298, "loss": 0.14894, "time": 0.08652}
{"mode": "train", "epoch": 7, "iter": 70, "lr": 0.00443, "memory": 2456, "data_time": 0.00311, "loss": 0.21605, "time": 0.0875}
{"mode": "val", "epoch": 7, "iter": 18, "lr": 0.00443, "accuracy_top-1": 93.1338, "accuracy_top-5": 100.0}
{"mode": "train", "epoch": 8, "iter": 10, "lr": 0.00434, "memory": 2456, "data_time": 0.22201, "loss": 0.24505, "time": 0.30838}
{"mode": "train", "epoch": 8, "iter": 20, "lr": 0.00434, "memory": 2456, "data_time": 0.00293, "loss": 0.26093, "time": 0.08828}
{"mode": "train", "epoch": 8, "iter": 30, "lr": 0.00434, "memory": 2456, "data_time": 0.00234, "loss": 0.217, "time": 0.08664}
{"mode": "train", "epoch": 8, "iter": 40, "lr": 0.00434, "memory": 2456, "data_time": 0.00285, "loss": 0.19929, "time": 0.08683}
{"mode": "train", "epoch": 8, "iter": 50, "lr": 0.00434, "memory": 2456, "data_time": 0.00253, "loss": 0.15829, "time": 0.08831}
{"mode": "train", "epoch": 8, "iter": 60, "lr": 0.00434, "memory": 2456, "data_time": 0.00209, "loss": 0.17324, "time": 0.08723}
{"mode": "train", "epoch": 8, "iter": 70, "lr": 0.00434, "memory": 2456, "data_time": 0.0019, "loss": 0.21893, "time": 0.08606}
{"mode": "val", "epoch": 8, "iter": 18, "lr": 0.00434, "accuracy_top-1": 94.01408, "accuracy_top-5": 100.0}
{"mode": "train", "epoch": 9, "iter": 10, "lr": 0.00425, "memory": 2456, "data_time": 0.22961, "loss": 0.16113, "time": 0.30629}
{"mode": "train", "epoch": 9, "iter": 20, "lr": 0.00425, "memory": 2456, "data_time": 0.01705, "loss": 0.17244, "time": 0.09368}
{"mode": "train", "epoch": 9, "iter": 30, "lr": 0.00425, "memory": 2456, "data_time": 0.0032, "loss": 0.15853, "time": 0.09299}
{"mode": "train", "epoch": 9, "iter": 40, "lr": 0.00425, "memory": 2456, "data_time": 0.00289, "loss": 0.12966, "time": 0.08562}
{"mode": "train", "epoch": 9, "iter": 50, "lr": 0.00425, "memory": 2456, "data_time": 0.00296, "loss": 0.20319, "time": 0.08449}
{"mode": "train", "epoch": 9, "iter": 60, "lr": 0.00425, "memory": 2456, "data_time": 0.00284, "loss": 0.14021, "time": 0.08397}
{"mode": "train", "epoch": 9, "iter": 70, "lr": 0.00425, "memory": 2456, "data_time": 0.00287, "loss": 0.13234, "time": 0.08382}
{"mode": "val", "epoch": 9, "iter": 18, "lr": 0.00425, "accuracy_top-1": 94.54225, "accuracy_top-5": 100.0}
{"mode": "train", "epoch": 10, "iter": 10, "lr": 0.00417, "memory": 2456, "data_time": 0.23464, "loss": 0.20988, "time": 0.30617}
{"mode": "train", "epoch": 10, "iter": 20, "lr": 0.00417, "memory": 2456, "data_time": 0.00616, "loss": 0.25358, "time": 0.08336}
{"mode": "train", "epoch": 10, "iter": 30, "lr": 0.00417, "memory": 2456, "data_time": 0.00275, "loss": 0.24624, "time": 0.08498}
{"mode": "train", "epoch": 10, "iter": 40, "lr": 0.00417, "memory": 2456, "data_time": 0.00319, "loss": 0.2089, "time": 0.08597}
{"mode": "train", "epoch": 10, "iter": 50, "lr": 0.00417, "memory": 2456, "data_time": 0.00306, "loss": 0.17991, "time": 0.08443}
{"mode": "train", "epoch": 10, "iter": 60, "lr": 0.00417, "memory": 2456, "data_time": 0.00294, "loss": 0.1078, "time": 0.08544}
{"mode": "train", "epoch": 10, "iter": 70, "lr": 0.00417, "memory": 2456, "data_time": 0.00273, "loss": 0.23558, "time": 0.08493}
{"mode": "val", "epoch": 10, "iter": 18, "lr": 0.00417, "accuracy_top-1": 95.24648, "accuracy_top-5": 100.0}
